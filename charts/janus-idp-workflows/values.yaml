appName: janus-idp-workflows

global:
  # false means kind, minikube
  openshift: true
  devmode:
    image: quay.io/kiegroup/kogito-swf-devmode-nightly:latest

serviceAccountName: janus-idp-workflows-sa

labels:
  - app: janus-idp-workflows

flowName: starter

devmode:
  enabled: false
  image: quay.io/kiegroup/kogito-swf-devmode-nightly:main-2023-08-30

sonataflow-operator:
  enabled: true
  dataindex:
    image: quay.io/kiegroup/kogito-data-index-ephemeral

serverless-knative:
  enabled: true

workflows:
  enabled: false

postgresql-persistent:
  # depends on sonataflow-operator
  enabled: false
  database_service_name: workflows-db
  memory_limit: 512Mi
  volume_capacity: 1Gi
  config:
    postgresql_database: testdb
    postgresql_password: testp
    postgresql_user: testu
    port: 5432
  image:
    tag: "latest"

# override Janus image with one with the orchestrator plugin
backstage: 
  upstream:
    backstage:
      image:
        repository: rgolangh/orchestrator
      appConfig:
        backend:
          csp:
            default-src: ["'unsafe-eval'", "data:", "script-src-attr", "'self'", 'http:', 'https:']
            connect-src: ["'self'", "data:", 'http:', 'https:']
            script-src:  ["'unsafe-inline'", "'unsafe-eval'", "script-src-attr", "'self'", 'http:', 'https:']
        orchestrator:
          catalog:
            environment: development
          sonataFlowService:
            # make this conditional devmode || sonataflow-operator
            baseUrl: http://devmode.{{ .Release.Namespace }}.svc.cluster.local
            port: 80
            path: /
            workflowsSource:
              localPath: /tmp
              gitRepositoryUrl: https://github.com/tiagodolphine/backstage-orchestrator-work
          editor:
            path: /api/proxy/workflow-editor
        proxy:
          endpoints:
            /workflow-editor: https://start.kubesmarts.org/
